{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/julio/code/eventhub/EventHub/ui/react/eventhub-ui/src/components/Org.js\";\nimport { Component } from \"react\";\nimport Event from \"./Event\";\n\nclass OrgEventList extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  async componentDidMount() {\n    this.setState({\n      events: [{\n        event: {\n          name: \"event name 1\",\n          orgID: 2,\n          description: \"event description\",\n          startTime: new Date(),\n          endTime: new Date(),\n          tags: [\"gaming\", \"greek\"],\n          location: \"price center\",\n          created: new Date(),\n          updated: new Date()\n        },\n        org: {\n          name: \"org name\"\n        }\n      }, {\n        event: {\n          name: \"event name 2\",\n          orgID: 2,\n          description: \"event description\",\n          startTime: new Date(),\n          endTime: new Date(),\n          tags: [\"gaming\", \"greek\"],\n          location: \"price center\",\n          created: new Date(),\n          updated: new Date()\n        },\n        org: {\n          name: \"org name\"\n        }\n      }]\n    });\n  }\n\n  render() {\n    if (!this.state) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 20\n      }, this);\n    }\n\n    console.log(this.state);\n    const events = this.state.arr.map(evt => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Event, {\n          preview: \"wide\",\n          model: evt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\nexport default class Org extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.setState({\n      name: \"org name\"\n    });\n  }\n\n  imgSrc() {\n    return `/api/orgs/${this.props.orgID}/logo`;\n  }\n\n  render() {\n    if (!this.state) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: this.imgSrc(),\n        className: \"org-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: this.state.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(OrgEventList, {\n        orgID: this.props.orgID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/julio/code/eventhub/EventHub/ui/react/eventhub-ui/src/components/Org.js"],"names":["Component","Event","OrgEventList","constructor","props","componentDidMount","setState","events","event","name","orgID","description","startTime","Date","endTime","tags","location","created","updated","org","render","state","console","log","arr","map","evt","Org","imgSrc"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\n\nimport Event from \"./Event\";\n\nclass OrgEventList extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    async componentDidMount() {\n        this.setState({\n            events: [\n                {\n                    event: {\n                        name: \"event name 1\",\n                        orgID: 2,\n                        description: \"event description\",\n                        startTime: new Date(),\n                        endTime: new Date(),\n                        tags: [\"gaming\", \"greek\"],\n                        location: \"price center\",\n                        created: new Date(),\n                        updated: new Date(),\n                    },\n                    org: {\n                        name: \"org name\",\n                    },\n                },\n                {\n                    event: {\n                        name: \"event name 2\",\n                        orgID: 2,\n                        description: \"event description\",\n                        startTime: new Date(),\n                        endTime: new Date(),\n                        tags: [\"gaming\", \"greek\"],\n                        location: \"price center\",\n                        created: new Date(),\n                        updated: new Date(),\n                    },\n                    org: {\n                        name: \"org name\",\n                    },\n                },\n            ]\n        });\n    }\n\n\n    render() {\n        if (!this.state) {\n            return <div/>;\n        }\n\n        console.log(this.state);\n\n        const events = this.state.arr.map((evt) => {\n            return (<li><Event preview=\"wide\" model={evt}/></li>)\n        });\n\n\n        return (\n            <ol>\n                {events}\n            </ol>\n        );\n    }\n};\n\nexport default class Org extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        this.setState({\n            name: \"org name\"\n        });\n    }\n\n    imgSrc() {\n        return `/api/orgs/${this.props.orgID}/logo`\n    }\n\n    render() {\n        if (!this.state) {\n            return <div/>;\n        }\n\n\n        return (\n            <div>\n                <img src={this.imgSrc()} className=\"org-logo\" />\n                <h1>{this.state.name}</h1>\n                <p>{this.state.description}</p>\n                <OrgEventList orgID={this.props.orgID} />\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}