{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/julio/code/eventhub/EventHub/ui/react/eventhub-ui/src/components/Event.js\";\nimport { Fragment, Component } from \"react\";\nimport { Link, useHistory, withRouter } from \"react-router-dom\";\nexport default withRouter(class Event extends Component {\n  constructor(props) {\n    super(props);\n\n    if (props.model) {\n      this.state = props.model;\n    }\n\n    this.history = useHistory();\n    console.log(\"in cons: \", props);\n  }\n\n  componentDidMount() {\n    if (!this.state) {\n      this.setState({\n        event: {\n          id: this.props.eventID,\n          name: \"event name\",\n          orgID: 2,\n          description: \"event description\",\n          startTime: new Date().toISOString(),\n          endTime: new Date().toISOString(),\n          tags: [\"gaming\", \"greek\"],\n          location: \"price center\",\n          created: new Date().toISOString(),\n          updated: new Date().toISOString()\n        },\n        org: {\n          name: \"org name\"\n        },\n        announcements: [{\n          date: new Date().toISOString(),\n          body: \"announcement 1\"\n        }, {\n          date: new Date().toISOString(),\n          body: \"announcement 2\"\n        }]\n      });\n    }\n  }\n\n  preview(className) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/events/${this.state.event.id}`,\n          children: this.state.event.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tc\", {\n            className: \"event-detail-field\",\n            children: \"By: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tc\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/orgs/${this.state.org.id}`,\n              children: this.state.org.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tc\", {\n            className: \"event-detail-field\",\n            children: \"On: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tc\", {\n            children: this.state.event.startTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n  edit() {\n    const announcements = this.state.announcements.map((a, i) => /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"event-edit-field\",\n        htmlFor: `announcement-${i}`,\n        children: a.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        form: \"event-edit-form\",\n        name: `annoucement-${i}`,\n        value: a.body,\n        onChange: evt => {\n          this.state.announcements[i].body = evt.target.value;\n          this.setState({ ...this.state\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this));\n    console.log(this.props);\n    console.log(this.state);\n\n    const submitForm = () => {\n      // send to api\n      console.log(\"submitting\", this.props, this.state);\n      this.props.history.push(`/events/${this.props.eventID}`);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Edit: \", this.state.event.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"event-edit-form\",\n        onSubmit: submitForm,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"event-edit-field\",\n          children: [\"Event Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"event-name\",\n            type: \"text\",\n            value: this.state.event.name,\n            onChange: evt => {\n              this.state.event.name = evt.target.value;\n              this.setState({ ...this.state\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"event-edit-field\",\n          children: [\"Starting at\", /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"start-time\",\n            type: \"datetime-local\",\n            value: this.state.event.startTime,\n            onChange: evt => {\n              this.state.event.startTime = evt.target.value;\n              this.setState({ ...this.state\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"event-edit-field\",\n          children: [\"Until\", /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"end-time\",\n            type: \"datetime-local\",\n            value: this.state.event.endTime,\n            onChange: evt => {\n              this.state.event.endTime = evt.target.value;\n              this.setState({ ...this.state\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"event-edit-field\",\n          children: [\"Located at\", /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"location\",\n            type: \"text\",\n            value: this.state.event.location,\n            onChange: evt => {\n              this.state.event.location = evt.target.value;\n              this.setState({ ...this.state\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"event-edit-field\",\n          htmlFor: \"description\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          form: \"event-edit-form\",\n          name: \"description\",\n          value: this.state.event.description,\n          onChange: evt => {\n            this.state.event.description = evt.target.value;\n            this.setState({ ...this.state\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this), !this.state.hasNewAnnouncement && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"event-edit-field\",\n          type: \"button\",\n          onClick: () => {\n            let a = this.state.announcements;\n            a.unshift({\n              date: new Date().toISOString(),\n              body: \"New announcement\"\n            });\n            this.setState({ ...this.state,\n              announcements: a,\n              hasNewAnnouncement: true\n            });\n          },\n          children: \"New Announcement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 57\n        }, this), this.state.hasNewAnnouncement && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"event-edit-field\",\n          type: \"button\",\n          onClick: () => {\n            let a = this.state.announcements;\n            a.shift();\n            this.setState({ ...this.state,\n              announcements: a,\n              hasNewAnnouncement: false\n            });\n          },\n          children: \"Cancel New Announcement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 57\n        }, this), announcements, /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"event-edit-field\",\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    if (!this.state) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 20\n      }, this);\n    }\n\n    if (this.props.preview) {\n      return this.preview();\n    }\n\n    if (this.props.edit) {\n      return this.edit();\n    }\n\n    const announcements = this.state.announcements.map((a, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: a.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: a.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: this.state.event.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tc\", {\n            className: \"event-detail-field\",\n            children: \"By: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tc\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/orgs/${this.state.org.id}`,\n              children: this.state.org.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tc\", {\n            className: \"event-detail-field\",\n            children: \"On: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tc\", {\n            children: this.state.event.startTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tc\", {\n            className: \"event-detail-field\",\n            children: \"Until: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tc\", {\n            children: this.state.event.endTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tc\", {\n            className: \"event-detail-field\",\n            children: \"At: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tc\", {\n            children: this.state.event.location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.event.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Announcements\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: announcements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }, this);\n  }\n\n});","map":{"version":3,"sources":["/Users/julio/code/eventhub/EventHub/ui/react/eventhub-ui/src/components/Event.js"],"names":["Fragment","Component","Link","useHistory","withRouter","Event","constructor","props","model","state","history","console","log","componentDidMount","setState","event","id","eventID","name","orgID","description","startTime","Date","toISOString","endTime","tags","location","created","updated","org","announcements","date","body","preview","className","edit","map","a","i","evt","target","value","submitForm","push","hasNewAnnouncement","unshift","shift","render"],"mappings":"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","sourcesContent":["import { Fragment, Component } from \"react\";\nimport { Link, useHistory, withRouter } from \"react-router-dom\";\n\nexport default withRouter (class Event extends Component {\n    constructor(props) {\n        super(props);\n\n        if (props.model) {\n            this.state = props.model;\n        }\n\n        this.history = useHistory()\n\n        console.log(\"in cons: \", props);\n    }\n\n    componentDidMount() {\n        if (!this.state) {\n            this.setState({\n                event: {\n                    id: this.props.eventID,\n                    name: \"event name\",\n                    orgID: 2,\n                    description: \"event description\",\n                    startTime: new Date().toISOString(),\n                    endTime: new Date().toISOString(),\n                    tags: [\"gaming\", \"greek\"],\n                    location: \"price center\",\n                    created: new Date().toISOString(),\n                    updated: new Date().toISOString(),\n                },\n                org: {\n                    name: \"org name\",\n                },\n                announcements: [\n                    {\n                        date: new Date().toISOString(),\n                        body: \"announcement 1\",\n                    },\n                    {\n                        date: new Date().toISOString(),\n                        body: \"announcement 2\",\n                    },\n                ],\n            });\n        }\n    }\n\n    preview(className) {\n        return (\n            <>\n                <h2>\n                    <Link to={`/events/${this.state.event.id}`}>{this.state.event.name}</Link>\n                </h2>\n                <table>\n                    <tr>\n                        <tc className=\"event-detail-field\">By: </tc>\n                        <tc>\n                            <Link to={`/orgs/${this.state.org.id}`}>{this.state.org.name}</Link>\n                        </tc>\n                    </tr>\n                    <tr>\n                        <tc className=\"event-detail-field\">On: </tc>\n                        <tc>{this.state.event.startTime}</tc>\n                    </tr>\n                </table>\n            </>\n        );\n    }\n\n    edit() {\n        const announcements = this.state.announcements.map((a, i) => (\n            <Fragment key={i}>\n                <label className=\"event-edit-field\" htmlFor={`announcement-${i}`}>{a.date}</label>\n\n                <textarea\n                    form=\"event-edit-form\"\n                    name={`annoucement-${i}`}\n                    value={a.body}\n                    onChange={(evt) => {\n                        this.state.announcements[i].body = evt.target.value;\n\n                        this.setState({\n                            ...this.state,\n                        })\n                    }}/>\n\n            </Fragment>\n        ));\n\n            console.log(this.props);\n            console.log(this.state);\n\n        const submitForm = () => {\n            // send to api\n            console.log(\"submitting\", this.props, this.state);\n            this.props.history.push(`/events/${this.props.eventID}`);\n        }\n\n\n        return (\n            <div>\n                <h1>\n                    Edit: {this.state.event.name}\n                </h1>\n\n                <form id=\"event-edit-form\" onSubmit={submitForm}>\n                    <label className=\"event-edit-field\" >Event Name\n                        <input\n                            name=\"event-name\"\n                            type=\"text\"\n                            value={this.state.event.name}\n                            onChange={(evt) => {\n                                this.state.event.name = evt.target.value;\n\n                                this.setState({\n                                    ...this.state,\n                                })\n                            }}/>\n                    </label>\n\n                    <label className=\"event-edit-field\">Starting at\n                        {/*\n                            datetime-local has a widget for all mobile browsers but only on\n                            chrome for desktop\n                        */}\n                        <input\n                            name=\"start-time\"\n                            type=\"datetime-local\"\n                            value={this.state.event.startTime}\n                            onChange={(evt) => {\n                                this.state.event.startTime = evt.target.value;\n\n                                this.setState({\n                                    ...this.state,\n                                })\n                            }}/>\n                    </label>\n\n                    <label className=\"event-edit-field\">Until\n                        {/*\n                            datetime-local has a widget for all mobile browsers but only on\n                            chrome for desktop\n                        */}\n                        <input\n                            name=\"end-time\"\n                            type=\"datetime-local\"\n                            value={this.state.event.endTime}\n                            onChange={(evt) => {\n                                this.state.event.endTime = evt.target.value;\n\n                                this.setState({\n                                    ...this.state,\n                                })\n                            }}/>\n                    </label>\n\n                    <label className=\"event-edit-field\">Located at\n                        <input\n                            name=\"location\"\n                            type=\"text\"\n                            value={this.state.event.location}\n                            onChange={(evt) => {\n                                this.state.event.location = evt.target.value;\n\n                                this.setState({\n                                    ...this.state,\n                                })\n                            }}/>\n                    </label>\n\n                    <label className=\"event-edit-field\" htmlFor=\"description\">Description</label>\n\n                    <textarea\n                        form=\"event-edit-form\"\n                        name=\"description\"\n                        value={this.state.event.description}\n                        onChange={(evt) => {\n                            this.state.event.description = evt.target.value;\n\n                            this.setState({\n                                ...this.state,\n                            })\n                        }}/>\n\n                    {/*\n                        this button is not part of the form, merely a way to interact\n                        with the form, therefore it is not an input\n                    */}\n\n                    {!this.state.hasNewAnnouncement && (<button className=\"event-edit-field\"\n                        type=\"button\"\n                        onClick={() => {\n                            let a = this.state.announcements;\n\n                            a.unshift({\n                                date: new Date().toISOString(),\n                                body: \"New announcement\",\n                            });\n\n\n                            this.setState({\n                                ...this.state,\n                                announcements: a,\n                                hasNewAnnouncement: true,\n                            });\n\n                        }}>New Announcement</button>)}\n                    { this.state.hasNewAnnouncement && (<button className=\"event-edit-field\"\n                        type=\"button\"\n                        onClick={() => {\n                            let a = this.state.announcements;\n                            a.shift();\n\n                            this.setState({\n                                ...this.state,\n                                announcements: a,\n                                hasNewAnnouncement: false,\n                            });\n                        }}>Cancel New Announcement</button>)}\n\n                    {/* one of these per announcement */}\n\n                    {announcements}\n\n                    <input className=\"event-edit-field\" type=\"submit\"/>\n\n                </form>\n            </div>\n        );\n    }\n\n    render() {\n        if (!this.state) {\n            return <div/>;\n        }\n\n        if (this.props.preview) {\n            return this.preview();\n        }\n\n        if (this.props.edit) {\n            return this.edit()\n        }\n\n        const announcements = this.state.announcements.map((a, i) => (\n            <li key={i}>\n                <h3>{a.date}</h3>\n                <p>{a.body}</p>\n            </li>\n        ));\n\n        return (\n            <div>\n                <h1>\n                    {this.state.event.name}\n                </h1>\n                <h2>Details</h2>\n                <table>\n                    <tr>\n                        <tc className=\"event-detail-field\">By: </tc>\n                        <tc>\n                            <Link to={`/orgs/${this.state.org.id}`}>{this.state.org.name}</Link>\n                        </tc>\n                    </tr>\n                    <tr>\n                        <tc className=\"event-detail-field\">On: </tc>\n                        <tc>{this.state.event.startTime}</tc>\n                    </tr>\n                    <tr>\n                        <tc className=\"event-detail-field\">Until: </tc>\n                        <tc>{this.state.event.endTime}</tc>\n                    </tr>\n                    <tr>\n                        <tc className=\"event-detail-field\">At: </tc>\n                        <tc>{this.state.event.location}</tc>\n                    </tr>\n                </table>\n\n                <h2>Description</h2>\n                <p>{this.state.event.description}</p>\n\n                <h2>Announcements</h2>\n                <ol>\n                    {announcements}\n                </ol>\n            </div>\n        );\n    }\n});\n"]},"metadata":{},"sourceType":"module"}